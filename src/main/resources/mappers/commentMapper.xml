<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring_boot_final.project.dao.ICommentDAO">

    <!-- Create -->

    <insert id="createComment" parameterType="com.spring_boot_final.project.model.NoteCommentVO">
        <![CDATA[
        INSERT INTO comment (noteId, userId, comment)
        VALUES (#{noteId}, #{userId}, #{comment})
        ]]>
    </insert>

    <insert id="insertCommentLike" parameterType="com.spring_boot_final.project.model.NoteCommentVO">
        <![CDATA[
        INSERT into commentLike(commentId, userId)
        values (#{commentId}, #{userId});
        ]]>
    </insert>

    <!-- Read -->

    <select id="selectCommentList" parameterType="int" resultType="com.spring_boot_final.project.model.NoteCommentVO">
        <![CDATA[
        select c.commentId,
               c.noteId,
               c.userId,
               c.comment,
               c.commentLike,
               c.commentCreatedDate,
               u.userNickname
        from comment c,
             user u
        where c.noteId = #{noteId}
          and c.userId = u.userId
          and c.pageViewState = 'POST'
        order by c.commentCreatedDate desc;
        ]]>
    </select>

    <select id="selectComment" parameterType="int" resultType="com.spring_boot_final.project.model.NoteCommentVO">
        <![CDATA[
        select *
        from comment
        where commentId = #{commentId};
        ]]>
    </select>

    <select id="selectCommentLike" parameterType="com.spring_boot_final.project.model.NoteCommentVO" resultType="int">
        <![CDATA[
        select count(*)
        from commentLike
        where commentId = #{commentId}
          and userId = #{userId};
        ]]>
    </select>
	
	<!-- 마이페이지 댓글 조회-->
	<select id="selectCommentView" parameterType="string" resultType="com.spring_boot_final.project.model.NoteCommentVO">
        <![CDATA[
        select *
        from comment
        where userId = #{userId}
        and pageViewState = 'POST'
        ORDER by commentCreatedDate ASC
        ]]>
    </select>
	
	
	<!-- 마이페이지 코스 댓글 조회-->
	<select id="selectCourseComment" parameterType="string" resultType="com.spring_boot_final.project.model.CourseCommentVO">
        <![CDATA[
        select *
        from courseComment
        where userId = #{userId}
        and pageViewState = 'POST'
        ORDER by commentCreatedDate ASC
        ]]>
    </select>
	
	
    <!-- Update -->

    <update id="updateComment" parameterType="com.spring_boot_final.project.model.NoteCommentVO">
        <![CDATA[
        UPDATE comment
        SET comment=#{comment}
        WHERE commentId = #{commentId}
          AND userId = #{userId}
        ]]>
    </update>

    <update id="updateCommentLikeUp" parameterType="int">
        <![CDATA[
        UPDATE comment
        SET commentLike=commentLike+1
        WHERE commentId = #{commentId}
        ]]>
    </update>

    <update id="updateCommentLikeDown" parameterType="int">
        <![CDATA[
        UPDATE comment
        SET commentLike=commentLike-1
        WHERE commentId = #{commentId}
        ]]>
    </update>

    <!-- Delete -->

    <update id="deleteComment" parameterType="com.spring_boot_final.project.model.NoteCommentVO">
        <![CDATA[
        UPDATE comment
        SET pageViewState='DELETE'
        WHERE commentId = #{commentId}
          AND userId = #{userId}
        ]]>
    </update>

    <delete id="deleteCommentLike" parameterType="com.spring_boot_final.project.model.NoteCommentVO">
        <![CDATA[
        delete
        from commentLike
        where commentId = #{commentId}
          and userId = #{userId};
        ]]>
    </delete>
    
    <!-- 마이페이지 댓글 삭제 -->
     <delete id="deleteMpComment" parameterType="int">
        <![CDATA[
        delete
        from comment
        where commentId = #{commentId}
        ]]>
    </delete>


</mapper>